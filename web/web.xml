<!DOCTYPE web-app 
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" 
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<!-- This is an example of how to configure your web application's web.xml file to use exPOJO -->

<web-app>

	<display-name>MyApp</display-name>
	<description>
		"MyApp does what no other app does"
	</description>

	<!-- chaining happens automatically for identical url-pattern values -->
	<filter>
		<filter-name>exPOJO Filter</filter-name>
		<filter-class>com.sas.framework.expojo.servlet.ExpojoServletFilter</filter-class>
		<!-- exPOJO uses 'startsWith' method to match, not any regular expression matching so 
			don't use blah/* here -->
		<init-param>
			<!-- had resouces/ in here but resources/ apparently seem to perform DB access somehow -->
			<param-name>ignorePaths</param-name>
			<param-value>images/,fckeditor/,w3c/,admin?sid=Echo.Resource,admin?sid=Echo.Image,admin?sid=Echo.Boot,admin?sid=Echo.ContentPane,admin?sid=Echo.Label,admin?sid=Echo.ArrayContainer,admin?sid=Echo.Button,admin?sid=Echo.Grid,admin?sid=Echo.WindowPane,admin?sid=Echo.SplitPane,admin?sid=Echo.Text,admin?sid=Echo.List,admin?sid=echopoint,admin?sid=jq</param-value>
		</init-param>
	</filter>


	<!--
		Set up the exPOJO filter for each servlet in your application that has its model object
		persisted by a transparent persistence engine via the exposed POJO model pattern
	-->
	<filter-mapping>
		<filter-name>exPOJO Filter</filter-name>
		<servlet-name>MyAppServlet1</servlet-name>
	</filter-mapping>


	<filter-mapping>
		<filter-name>exPOJO Filter</filter-name>
		<url-pattern>/*</url-pattern>
		<!-- Don't wrap forwards otherwise we end up wrapping twice -->
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>

	<!-- Listeners must appear after filters and before servlets -->

	<!--
		MyAppListener is a listener that extends ExpojoServletContextListener to
		set up the persistence provider factory and add service and repository component
		for new ModelExposers as they are created for each new session.
	-->
	<listener>
		<listener-class>com.mycomp.myapp.context.MyAppListener</listener-class>
	</listener>

	<!-- servlet mappings -->

	<servlet>
		<servlet-name>MyAppServlet1</servlet-name>
		<servlet-class>com.mycomp.myapp.ui.MyAppServlet1</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>MyAppServlet1</servlet-name>
		<url-pattern>/app1</url-pattern>
	</servlet-mapping>


	<servlet>
		<servlet-name>MyAppServlet2</servlet-name>
		<servlet-class>com.mycomp.myapp.ui.MyAppServlet2</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>MyAppServlet2</servlet-name>
		<url-pattern>/app2</url-pattern>
	</servlet-mapping>

</web-app>