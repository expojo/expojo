javax.jdo.PersistenceManagerFactoryClass=org.datanucleus.api.jdo.JDOPersistenceManagerFactory

# Reference to JNDI DataSource resource setup in conf/context.xml
#javax.jdo.option.ConnectionFactoryName=java:comp/env/jdbc/pagebloom-cms

# comment above and uncomment this block when you need to run schema tool because it won't
# have access to a db otherwise. When running the app in a servlet contain reverse this change
#javax.jdo.option.ConnectionDriverName=com.mysql.jdbc.Driver
#javax.jdo.option.ConnectionURL=jdbc:mysql://localhost/proceng
#javax.jdo.option.ConnectionUserName=proceng
#javax.jdo.option.ConnectionPassword=proceng


# These parameters are set up by the relevant MessagingDbAccess object
#javax.jdo.option.ConnectionDriverName=org.h2.Driver
#javax.jdo.option.ConnectionURL=jdbc:h2:tcp://localhost/d:/dev/libs/stepAhead/proprietary/processEngine/src/test/datastore/proceng
#javax.jdo.option.ConnectionURL=jdbc:h2:tcp://localhost/x:/sas/pagebloom/libs/stepAhead/proprietary/processEngine/src/test/datastore/proceng
#src/test/datastore/process-engine-test
#javax.jdo.option.ConnectionUserName=sa
#javax.jdo.option.ConnectionPassword=

#javax.jdo.option.ConnectionDriverName=org.hsqldb.jdbcDriver
#javax.jdo.option.ConnectionURL=jdbc:hsqldb:file:src/test/datastore/hsql/process-engine
#javax.jdo.option.ConnectionUserName=sa
#javax.jdo.option.ConnectionPassword=

# Derby seems to be the most trouble free of the embedded databases
datanucleus.ConnectionDriverName=org.apache.derby.jdbc.EmbeddedDriver
datanucleus.ConnectionURL=jdbc:derby:src/test/datastore/derbyproceng;create=true
datanucleus.ConnectionUserName=proceng
datanucleus.ConnectionPassword=proceng

#Connection Pooling - not specified so will use DN's built in (DBCP2) connection pooling
#datanucleus.connectionPoolingType=None

# Optimization that can only be used when there is a single servlet container serving the app
# Set this option to true if pagebloom platform is running on more than one servlet container
datanucleus.findObject.validateWhenCached=false


#Life cycle/Transactional options

# get weird locking errors when using optimistic locking - go figure!
javax.jdo.option.Optimistic=true
javax.jdo.option.RetainValues=false
javax.jdo.option.RestoreValues=true
javax.jdo.option.NontransactionalRead=false

# causes any dirty objects to be flushed prior to a query being processed
# so that the query deals with an up to date database

# NOTE: Turned this off 26/8/2011 to fix a problem with AE
# This caused all emails to be sent twice! (batch size of 2 and no internal flushing in messageMgr - added internal flushing to messageMgr)
# NOTE: Turned this on again 30/10/2011 to fix problem with www.munchopia.com.au/app crashing with DB fk integrity exception
# Fixed the problem with AE by using forceCommitTx in enrol evaluate constructor after calling evaluate method
datanucleus.query.flushBeforeExecution=true

# short cut to setting autoCreate* - tables, columns, constraints to true
datanucleus.schema.autoCreateAll=true

datanucleus.schema.validateTables=true
datanucleus.schema.validateColumns=true
datanucleus.schema.validateConstraints=true

#datanucleus.schema.autoCreateAll=false
#datanucleus.schema.validateTables=false
#datanucleus.schema.validateColumns=false
#datanucleus.schema.validateConstraints=false

#Force all tables to be created at startup - this is EXTREMELY important for unit tests as there
#can be deadlock scenarios when complex object graphs are created and then have their tables auto
#creted on demand!!!!
datanucleus.generateSchema.database.mode=create

# MetaData Options

datanucleus.metadata.xml.validate=true

# Turn off for performance as we are not using persistence annotations
datanucleus.metadata.allowAnnotations=false

# Preloading of class meta data
datanucleus.autoStartMechanism=MetaData
datanucleus.autoStartMetaDataFiles=providedByApp  

datanucleus.storeManagerType=rdbms

datanucleus.rdbms.stringDefaultLength=255

# Keep using increment strategy even though this is no longer the default
# Default operation on MySQL changed with DN 3.1.0 M3
datanucleus.rdbms.useLegacyNativeValueStrategy=true

# Caching options

datanucleus.cache.level1.type=soft

datanucleus.cache.level2.type=soft
#datanucleus.cache.level2.type=jcache
#datanucleus.cache.level2.cacheName=pagebloom
#datanucleus.cache.level2.timeout=3600000


#datanucleus.cache.collections=false

# Multithreading options
datanucleus.Multithreaded=false


# Database naming options

datanucleus.identifier.case=lowercase

# Need this for backwards compatibility with algorithm for name
# generation used by DataNucleus 1
datanucleus.identifierFactory=datanucleus1

# Detach/Attach Options

datanucleus.attachSameDatastore=true
#datanucleus.copyOnAttach=true
datanucleus.copyOnAttach=false

# Setting these to true will be incompatible with current echo pages
# Also breaks workflow engine!
datanucleus.DetachAllOnCommit=true
#datanucleus.detachAllOnRollback=true
